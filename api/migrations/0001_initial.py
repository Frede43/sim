# Generated by Django 5.2 on 2025-04-10 13:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(choices=[('farmer', 'Agriculteur'), ('cooperative', 'Coopérative'), ('government', 'Gouvernement'), ('ngo', 'ONG'), ('financial', 'Institution Financière'), ('admin', 'Administrateur'), ('buyer', 'Acheteur')], default='farmer', max_length=20)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('farm_size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('cooperative_name', models.CharField(blank=True, max_length=255)),
                ('registration_number', models.CharField(blank=True, max_length=50)),
                ('institution_name', models.CharField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('email', 'username')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('alert_type', models.CharField(choices=[('Météo', 'Météo'), ('Marché', 'Marché'), ('Maladie', 'Maladie des cultures'), ('Opportunité', 'Opportunité'), ('Autre', 'Autre')], max_length=20)),
                ('severity', models.CharField(choices=[('Faible', 'Faible'), ('Moyenne', 'Moyenne'), ('Élevée', 'Élevée'), ('Urgente', 'Urgente')], default='Moyenne', max_length=20)),
                ('region', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_alerts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cooperative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('region', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('founded_date', models.DateField()),
                ('logo', models.ImageField(blank=True, null=True, upload_to='cooperative_logos/')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_cooperative', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('application_date', models.DateField()),
                ('approval_date', models.DateField(blank=True, null=True)),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('term_months', models.PositiveIntegerField()),
                ('purpose', models.TextField()),
                ('status', models.CharField(choices=[('Demandé', 'Demandé'), ('Approuvé', 'Approuvé'), ('Refusé', 'Refusé'), ('Décaissé', 'Décaissé'), ('Remboursé', 'Remboursé'), ('En défaut', 'En défaut')], default='Demandé', max_length=20)),
                ('collateral', models.TextField(blank=True)),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to=settings.AUTH_USER_MODEL)),
                ('lender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provided_loans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LoanRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='api.loan')),
            ],
        ),
        migrations.CreateModel(
            name='MarketPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('unit', models.CharField(default='kg', max_length=20)),
                ('date', models.DateField()),
                ('source', models.CharField(blank=True, max_length=255)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category')),
            ],
        ),
        migrations.CreateModel(
            name='NGOProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('Planifié', 'Planifié'), ('En cours', 'En cours'), ('Terminé', 'Terminé'), ('Annulé', 'Annulé')], default='Planifié', max_length=20)),
                ('beneficiaries_count', models.PositiveIntegerField(default=0)),
                ('ngo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('En attente', 'En attente'), ('Confirmé', 'Confirmé'), ('Expédié', 'Expédié'), ('Livré', 'Livré'), ('Annulé', 'Annulé')], default='En attente', max_length=20)),
                ('delivery_address', models.TextField()),
                ('contact_phone', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('seller_type', models.CharField(choices=[('farmer', 'Agriculteur'), ('cooperative', 'Coopérative')], default='farmer', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('unit', models.CharField(default='kg', max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality', models.CharField(choices=[('Premium', 'Premium'), ('Standard', 'Standard'), ('Économique', 'Économique')], default='Standard', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('region', models.CharField(max_length=100)),
                ('harvest_date', models.DateField()),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('low_stock', 'Stock Faible'), ('out_of_stock', 'Rupture de Stock')], default='available', max_length=20)),
                ('management_type', models.CharField(choices=[('individual', 'Individuel'), ('collective', 'Collectif')], default='individual', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('minimum_order', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('certification', models.CharField(blank=True, max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='api.category')),
                ('cooperative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_products', to='api.cooperative')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('product_name', models.CharField(max_length=100)),
                ('product_description', models.TextField(blank=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/')),
                ('is_primary', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_name', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('En attente', 'En attente'), ('Payé', 'Payé'), ('Annulé', 'Annulé')], default='En attente', max_length=20)),
                ('sale_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='Subsidy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('subsidy_type', models.CharField(choices=[('Semences', 'Semences'), ('Engrais', 'Engrais'), ('Matériel', 'Matériel agricole'), ('Formation', 'Formation'), ('Financement', 'Financement direct'), ('Autre', 'Autre')], max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('eligibility_criteria', models.TextField()),
                ('application_process', models.TextField()),
                ('status', models.CharField(choices=[('Disponible', 'Disponible'), ('Attribué', 'Attribué'), ('Épuisé', 'Épuisé')], default='Disponible', max_length=20)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provided_subsidies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Subsidies',
            },
        ),
        migrations.CreateModel(
            name='SubsidyApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateField()),
                ('status', models.CharField(choices=[('Soumise', 'Soumise'), ("En cours d'examen", "En cours d'examen"), ('Approuvée', 'Approuvée'), ('Rejetée', 'Rejetée')], default='Soumise', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='subsidy_documents/')),
                ('review_date', models.DateField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subsidy_applications', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_subsidy_applications', to=settings.AUTH_USER_MODEL)),
                ('subsidy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='api.subsidy')),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('capacity', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('Planifié', 'Planifié'), ('En cours', 'En cours'), ('Terminé', 'Terminé'), ('Annulé', 'Annulé')], default='Planifié', max_length=20)),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_trainings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CooperativeMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateField()),
                ('status', models.CharField(default='Actif', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('cooperative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='api.cooperative')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cooperative_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('farmer', 'cooperative')},
            },
        ),
        migrations.CreateModel(
            name='TrainingParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('attendance_confirmed', models.BooleanField(default=False)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_participations', to=settings.AUTH_USER_MODEL)),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='api.training')),
            ],
            options={
                'unique_together': {('training', 'participant')},
            },
        ),
    ]
